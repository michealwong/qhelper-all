/* soapStub.h
   Generated by gSOAP 2.7.15 from ILogManager.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_sap__QueryResult
#define SOAP_TYPE_sap__QueryResult (11)
/* sap:QueryResult */
enum sap__QueryResult {QUERY_OK = 0, QUERY_FAILED = 1};
#endif

#ifndef SOAP_TYPE_sap__WriteResult
#define SOAP_TYPE_sap__WriteResult (12)
/* sap:WriteResult */
enum sap__WriteResult {WRITE_OK = 0, WRITE_FAILED = 1};
#endif

#ifndef SOAP_TYPE_sap__LogLevel
#define SOAP_TYPE_sap__LogLevel (13)
/* sap:LogLevel */
enum sap__LogLevel {LEVEL_TRACE = 0, LEVEL_DEBUG = 1, LEVEL_INFO = 2, LEVEL_WARN = 3, LEVEL_ERROR = 4, LEVEL_FATAL = 5, LEVEL_ALL = 6};
#endif

#ifndef SOAP_TYPE_sap__LogType
#define SOAP_TYPE_sap__LogType (14)
/* sap:LogType */
enum sap__LogType {TYPE_OPT = 0, TYPE_CM = 1, TYPE_MONITOR = 2, TYPE_DEBUG = 3, TYPE_OTHER = 4};
#endif

#ifndef SOAP_TYPE_sap__MonitorLevel
#define SOAP_TYPE_sap__MonitorLevel (15)
/* sap:MonitorLevel */
enum sap__MonitorLevel {MONITOR_WARN = 0, MONITOR_ERROR = 1, MONITOR_FATAL = 2, MONITOR_STAT = 3, MONITOR_OTHER = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_sap__DebugLogData
#define SOAP_TYPE_sap__DebugLogData (16)
/* sap:DebugLogData */
struct sap__DebugLogData
{
public:
	int _level;	/* required element of type xsd:int */
	char *_time;	/* optional element of type xsd:string */
	char *_user;	/* optional element of type xsd:string */
	int _gourpID;	/* required element of type xsd:int */
	char *_logContent;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__QueryDebugLogDataSet
#define SOAP_TYPE_sap__QueryDebugLogDataSet (17)
/* sap:QueryDebugLogDataSet */
struct sap__QueryDebugLogDataSet
{
public:
	int __size;	/* sequence of elements <items> */
	struct sap__DebugLogData *items;	/* optional element of type sap:DebugLogData */
};
#endif

#ifndef SOAP_TYPE_sap__MonitorLogData
#define SOAP_TYPE_sap__MonitorLogData (19)
/* sap:MonitorLogData */
struct sap__MonitorLogData
{
public:
	char *_dtDateTime;	/* optional element of type xsd:string */
	int _iServiceId;	/* required element of type xsd:int */
	char *_vOptUser;	/* optional element of type xsd:string */
	int _iOptLevel;	/* required element of type xsd:int */
	int _iFuncId;	/* required element of type xsd:int */
	char *_vFuncParams;	/* optional element of type xsd:string */
	int _iResult;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sap__MonitorLogDataSet
#define SOAP_TYPE_sap__MonitorLogDataSet (20)
/* sap:MonitorLogDataSet */
struct sap__MonitorLogDataSet
{
public:
	int __size;	/* sequence of elements <items> */
	struct sap__MonitorLogData *items;	/* optional element of type sap:MonitorLogData */
};
#endif

#ifndef SOAP_TYPE_sap__CMLogData
#define SOAP_TYPE_sap__CMLogData (22)
/* sap:CMLogData */
struct sap__CMLogData
{
public:
	char *_dtDateTime;	/* optional element of type xsd:string */
	int _iOperateId;	/* required element of type xsd:int */
	char *_vOperateType;	/* optional element of type xsd:string */
	char *_vSeqId;	/* optional element of type xsd:string */
	ULONG64 _iUin;	/* required element of type xsd:long */
	char *_vPlayerId;	/* optional element of type xsd:string */
	char *_vPlayerName;	/* optional element of type xsd:string */
	int _iItemId;	/* required element of type xsd:int */
	int _iItemCount;	/* required element of type xsd:int */
	char *_vItemDesc;	/* optional element of type xsd:string */
	char *_vReason;	/* optional element of type xsd:string */
	char *_vMemo;	/* optional element of type xsd:string */
	char *_vIP;	/* optional element of type xsd:string */
	int _iResult;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sap__CMLogDataSet
#define SOAP_TYPE_sap__CMLogDataSet (23)
/* sap:CMLogDataSet */
struct sap__CMLogDataSet
{
public:
	int __size;	/* sequence of elements <items> */
	struct sap__CMLogData *items;	/* optional element of type sap:CMLogData */
};
#endif

#ifndef SOAP_TYPE_sap__OptLogData
#define SOAP_TYPE_sap__OptLogData (25)
/* sap:OptLogData */
struct sap__OptLogData
{
public:
	char *_dtDateTime;	/* optional element of type xsd:string */
	char *_vOptType;	/* optional element of type xsd:string */
	ULONG64 _iUin;	/* required element of type xsd:long */
	int _iWorldId;	/* required element of type xsd:int */
	char *_vPlayerName;	/* optional element of type xsd:string */
	char *_vContent;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__OptLogDataSet
#define SOAP_TYPE_sap__OptLogDataSet (26)
/* sap:OptLogDataSet */
struct sap__OptLogDataSet
{
public:
	int __size;	/* sequence of elements <items> */
	struct sap__OptLogData *items;	/* optional element of type sap:OptLogData */
};
#endif

#ifndef SOAP_TYPE_sap__QueryCMLogResponse
#define SOAP_TYPE_sap__QueryCMLogResponse (28)
/* sap:QueryCMLogResponse */
struct sap__QueryCMLogResponse
{
public:
	struct sap__CMLogDataSet dataSet;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type sap:CMLogDataSet */
};
#endif

#ifndef SOAP_TYPE_sap__QueryCMLog
#define SOAP_TYPE_sap__QueryCMLog (31)
/* sap:QueryCMLog */
struct sap__QueryCMLog
{
public:
	char *inUser;	/* optional element of type xsd:string */
	int inGroupID;	/* required element of type xsd:int */
	ULONG64 inQQ;	/* required element of type xsd:long */
	int inWorldID;	/* required element of type xsd:int */
	char *inOptType;	/* optional element of type xsd:string */
	char *inStartTime;	/* optional element of type xsd:string */
	char *inEndTime;	/* optional element of type xsd:string */
	int inReqPageIndex;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sap__QueryOPTLogResponse
#define SOAP_TYPE_sap__QueryOPTLogResponse (32)
/* sap:QueryOPTLogResponse */
struct sap__QueryOPTLogResponse
{
public:
	struct sap__OptLogDataSet dataSet;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type sap:OptLogDataSet */
};
#endif

#ifndef SOAP_TYPE_sap__QueryOPTLog
#define SOAP_TYPE_sap__QueryOPTLog (35)
/* sap:QueryOPTLog */
struct sap__QueryOPTLog
{
public:
	char *inUser;	/* optional element of type xsd:string */
	int inGroupID;	/* required element of type xsd:int */
	ULONG64 inQQ;	/* required element of type xsd:long */
	int inWorldID;	/* required element of type xsd:int */
	char *inOptType;	/* optional element of type xsd:string */
	char *inStartTime;	/* optional element of type xsd:string */
	char *inEndTime;	/* optional element of type xsd:string */
	int inReqPageIndex;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sap__QueryDebugLogResponse
#define SOAP_TYPE_sap__QueryDebugLogResponse (36)
/* sap:QueryDebugLogResponse */
struct sap__QueryDebugLogResponse
{
public:
	struct sap__QueryDebugLogDataSet dataSet;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type sap:QueryDebugLogDataSet */
};
#endif

#ifndef SOAP_TYPE_sap__QueryDebugLog
#define SOAP_TYPE_sap__QueryDebugLog (39)
/* sap:QueryDebugLog */
struct sap__QueryDebugLog
{
public:
	char *inUser;	/* optional element of type xsd:string */
	int inGroupID;	/* required element of type xsd:int */
	enum sap__LogLevel inLogLevel;	/* required element of type sap:LogLevel */
};
#endif

#ifndef SOAP_TYPE_sap__QueryMonitorLogResponse
#define SOAP_TYPE_sap__QueryMonitorLogResponse (40)
/* sap:QueryMonitorLogResponse */
struct sap__QueryMonitorLogResponse
{
public:
	struct sap__MonitorLogDataSet dataSet;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type sap:MonitorLogDataSet */
};
#endif

#ifndef SOAP_TYPE_sap__QueryMonitorLog
#define SOAP_TYPE_sap__QueryMonitorLog (43)
/* sap:QueryMonitorLog */
struct sap__QueryMonitorLog
{
public:
	enum sap__LogLevel inLogLevel;	/* required element of type sap:LogLevel */
	int inServiceId;	/* required element of type xsd:int */
	char *inStartTime;	/* optional element of type xsd:string */
	char *inEndTime;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__WriteDebugLogResponse
#define SOAP_TYPE_sap__WriteDebugLogResponse (46)
/* sap:WriteDebugLogResponse */
struct sap__WriteDebugLogResponse
{
public:
	enum sap__WriteResult *outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type sap:WriteResult */
};
#endif

#ifndef SOAP_TYPE_sap__WriteDebugLog
#define SOAP_TYPE_sap__WriteDebugLog (47)
/* sap:WriteDebugLog */
struct sap__WriteDebugLog
{
public:
	enum sap__LogLevel inLogLevel;	/* required element of type sap:LogLevel */
	enum sap__LogType inLogType;	/* required element of type sap:LogType */
	char *inUser;	/* optional element of type xsd:string */
	int inGroupID;	/* required element of type xsd:int */
	char *inContent;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__WriteMonitorLogResponse
#define SOAP_TYPE_sap__WriteMonitorLogResponse (49)
/* sap:WriteMonitorLogResponse */
struct sap__WriteMonitorLogResponse
{
public:
	enum sap__WriteResult *outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type sap:WriteResult */
};
#endif

#ifndef SOAP_TYPE_sap__WriteMonitorLog
#define SOAP_TYPE_sap__WriteMonitorLog (50)
/* sap:WriteMonitorLog */
struct sap__WriteMonitorLog
{
public:
	enum sap__LogType inLogType;	/* required element of type sap:LogType */
	enum sap__MonitorLevel inMonitorLogType;	/* required element of type sap:MonitorLevel */
	char *inUser;	/* optional element of type xsd:string */
	int inServiceID;	/* required element of type xsd:int */
	int inFuncId;	/* required element of type xsd:int */
	char *inFuncParams;	/* optional element of type xsd:string */
	int inValue;	/* required element of type xsd:int */
	int inResult;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_sap__WriteCMLogResponse
#define SOAP_TYPE_sap__WriteCMLogResponse (52)
/* sap:WriteCMLogResponse */
struct sap__WriteCMLogResponse
{
public:
	enum sap__WriteResult *outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type sap:WriteResult */
};
#endif

#ifndef SOAP_TYPE_sap__WriteCMLog
#define SOAP_TYPE_sap__WriteCMLog (53)
/* sap:WriteCMLog */
struct sap__WriteCMLog
{
public:
	char *inUser;	/* optional element of type xsd:string */
	int inGroupId;	/* required element of type xsd:int */
	int inOptId;	/* required element of type xsd:int */
	ULONG64 inUin;	/* required element of type xsd:long */
	int inWorldId;	/* required element of type xsd:int */
	int inResult;	/* required element of type xsd:int */
	char *inOptType;	/* optional element of type xsd:string */
	char *inIP;	/* optional element of type xsd:string */
	char *inSeqId;	/* optional element of type xsd:string */
	char *inPlayerId;	/* optional element of type xsd:string */
	char *inPlayerName;	/* optional element of type xsd:string */
	int inItemId;	/* required element of type xsd:int */
	int inItemCount;	/* required element of type xsd:int */
	char *inItemDesc;	/* optional element of type xsd:string */
	char *inReason;	/* optional element of type xsd:string */
	char *inMemo;	/* optional element of type xsd:string */
	char *inCmd;	/* optional element of type xsd:string */
	int inSourceId;	/* required element of type xsd:int */
	char *inSerial;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__WriteOptLogResponse
#define SOAP_TYPE_sap__WriteOptLogResponse (55)
/* sap:WriteOptLogResponse */
struct sap__WriteOptLogResponse
{
public:
	enum sap__WriteResult *outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type sap:WriteResult */
};
#endif

#ifndef SOAP_TYPE_sap__WriteOptLog
#define SOAP_TYPE_sap__WriteOptLog (56)
/* sap:WriteOptLog */
struct sap__WriteOptLog
{
public:
	char *inUser;	/* optional element of type xsd:string */
	int inGroupId;	/* required element of type xsd:int */
	ULONG64 inUin;	/* required element of type xsd:long */
	int inWorldId;	/* required element of type xsd:int */
	char *inPlayerName;	/* optional element of type xsd:string */
	char *inOptType;	/* optional element of type xsd:string */
	char *inLogContent;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_sap__SendEmailResponse
#define SOAP_TYPE_sap__SendEmailResponse (58)
/* sap:SendEmailResponse */
struct sap__SendEmailResponse
{
public:
	enum sap__WriteResult *outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type sap:WriteResult */
};
#endif

#ifndef SOAP_TYPE_sap__SendEmail
#define SOAP_TYPE_sap__SendEmail (59)
/* sap:SendEmail */
struct sap__SendEmail
{
public:
	char *inMailTo;	/* optional element of type xsd:string */
	char *inEmailTitle;	/* optional element of type xsd:string */
	char *inEmailText;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (60)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (61)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (63)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (66)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (67)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (8)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (10)
typedef ULONG64 xsd__long;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
