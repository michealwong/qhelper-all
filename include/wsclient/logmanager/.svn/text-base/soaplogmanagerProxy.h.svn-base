/* soaplogmanagerProxy.h
   Generated by gSOAP 2.7.15 from ILogManager.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soaplogmanagerProxy_H
#define soaplogmanagerProxy_H
#include "soapH.h"

class SOAP_CMAC logmanagerProxy : public soap
{ public:
	/// Endpoint URL of service 'logmanagerProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	logmanagerProxy();
	/// Constructor with copy of another engine state
	logmanagerProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	logmanagerProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	logmanagerProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~logmanagerProxy();
	/// Initializer used by constructors
	virtual	void logmanagerProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'QueryCMLog' (returns error code or SOAP_OK)
	virtual	int QueryCMLog(char *inUser, int inGroupID, ULONG64 inQQ, int inWorldID, char *inOptType, char *inStartTime, char *inEndTime, int inReqPageIndex, struct sap__QueryCMLogResponse *outResult);

	/// Web service operation 'QueryOPTLog' (returns error code or SOAP_OK)
	virtual	int QueryOPTLog(char *inUser, int inGroupID, ULONG64 inQQ, int inWorldID, char *inOptType, char *inStartTime, char *inEndTime, int inReqPageIndex, struct sap__QueryOPTLogResponse *outResult);

	/// Web service operation 'QueryDebugLog' (returns error code or SOAP_OK)
	virtual	int QueryDebugLog(char *inUser, int inGroupID, enum sap__LogLevel inLogLevel, struct sap__QueryDebugLogResponse *outResult);

	/// Web service operation 'QueryMonitorLog' (returns error code or SOAP_OK)
	virtual	int QueryMonitorLog(enum sap__LogLevel inLogLevel, int inServiceId, char *inStartTime, char *inEndTime, struct sap__QueryMonitorLogResponse *outResult);

	/// Web service operation 'WriteDebugLog' (returns error code or SOAP_OK)
	virtual	int WriteDebugLog(enum sap__LogLevel inLogLevel, enum sap__LogType inLogType, char *inUser, int inGroupID, char *inContent, enum sap__WriteResult *outResult);

	/// Web service operation 'WriteMonitorLog' (returns error code or SOAP_OK)
	virtual	int WriteMonitorLog(enum sap__LogType inLogType, enum sap__MonitorLevel inMonitorLogType, char *inUser, int inServiceID, int inFuncId, char *inFuncParams, int inValue, int inResult, enum sap__WriteResult *outResult);

	/// Web service operation 'WriteCMLog' (returns error code or SOAP_OK)
	virtual	int WriteCMLog(char *inUser, int inGroupId, int inOptId, ULONG64 inUin, int inWorldId, int inResult, char *inOptType, char *inIP, char *inSeqId, char *inPlayerId, char *inPlayerName, int inItemId, int inItemCount, char *inItemDesc, char *inReason, char *inMemo, char *inCmd, int inSourceId, char *inSerial, enum sap__WriteResult *outResult);

	/// Web service operation 'WriteOptLog' (returns error code or SOAP_OK)
	virtual	int WriteOptLog(char *inUser, int inGroupId, ULONG64 inUin, int inWorldId, char *inPlayerName, char *inOptType, char *inLogContent, enum sap__WriteResult *outResult);

	/// Web service operation 'SendEmail' (returns error code or SOAP_OK)
	virtual	int SendEmail(char *inMailTo, char *inEmailTitle, char *inEmailText, enum sap__WriteResult *outResult);
};
#endif
