/* soapStub.h
   Generated by gSOAP 2.7.15 from IDBManager.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_dbm__StringArray
#define SOAP_TYPE_dbm__StringArray (11)
/* Sequence of dbm:StringArray schema type: */
struct dbm__StringArray
{
public:
	char **__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlByDataOperResponse
#define SOAP_TYPE_dbm__ExeSqlByDataOperResponse (14)
/* dbm:ExeSqlByDataOperResponse */
struct dbm__ExeSqlByDataOperResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlByDataOper
#define SOAP_TYPE_dbm__ExeSqlByDataOper (15)
/* dbm:ExeSqlByDataOper */
struct dbm__ExeSqlByDataOper
{
public:
	int inDBId;	/* required element of type xsd:int */
	char *inDBName;	/* optional element of type xsd:string */
	char *inSql;	/* optional element of type xsd:string */
	char *inDBCategory;	/* optional element of type xsd:string */
	int inDBPort;	/* required element of type xsd:int */
	char *inEncode;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlResponse
#define SOAP_TYPE_dbm__ExeSqlResponse (17)
/* dbm:ExeSqlResponse */
struct dbm__ExeSqlResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSql
#define SOAP_TYPE_dbm__ExeSql (18)
/* dbm:ExeSql */
struct dbm__ExeSql
{
public:
	char *inDBIP;	/* optional element of type xsd:string */
	char *inDBUser;	/* optional element of type xsd:string */
	char *inDBPwd;	/* optional element of type xsd:string */
	char *inDBName;	/* optional element of type xsd:string */
	char *inSql;	/* optional element of type xsd:string */
	char *inDBCategory;	/* optional element of type xsd:string */
	int inDBPort;	/* required element of type xsd:int */
	char *inEncode;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlByWorldIdResponse
#define SOAP_TYPE_dbm__ExeSqlByWorldIdResponse (20)
/* dbm:ExeSqlByWorldIdResponse */
struct dbm__ExeSqlByWorldIdResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlByWorldId
#define SOAP_TYPE_dbm__ExeSqlByWorldId (21)
/* dbm:ExeSqlByWorldId */
struct dbm__ExeSqlByWorldId
{
public:
	int inServiceId;	/* required element of type xsd:int */
	int inWorldId;	/* required element of type xsd:int */
	int inDBType;	/* required element of type xsd:int */
	char *inDBName;	/* optional element of type xsd:string */
	char *inSql;	/* optional element of type xsd:string */
	char *inDBCategory;	/* optional element of type xsd:string */
	int inDBPort;	/* required element of type xsd:int */
	char *inEncode;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlFromMultiTableResponse
#define SOAP_TYPE_dbm__ExeSqlFromMultiTableResponse (23)
/* dbm:ExeSqlFromMultiTableResponse */
struct dbm__ExeSqlFromMultiTableResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__ExeSqlFromMultiTable
#define SOAP_TYPE_dbm__ExeSqlFromMultiTable (24)
/* dbm:ExeSqlFromMultiTable */
struct dbm__ExeSqlFromMultiTable
{
public:
	int inDBId;	/* required element of type xsd:int */
	char *inDBName;	/* optional element of type xsd:string */
	char *inSQLFormat;	/* optional element of type xsd:string */
	LONG64 inStartTime;	/* required element of type xsd:long */
	LONG64 inEndTime;	/* required element of type xsd:long */
	LONG64 inStep;	/* required element of type xsd:long */
	char *inEncode;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__QuerierResponse
#define SOAP_TYPE_dbm__QuerierResponse (26)
/* dbm:QuerierResponse */
struct dbm__QuerierResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__Querier
#define SOAP_TYPE_dbm__Querier (27)
/* dbm:Querier */
struct dbm__Querier
{
public:
	int inQueryId;	/* required element of type xsd:int */
	char *inParams;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__QuerierByAliasResponse
#define SOAP_TYPE_dbm__QuerierByAliasResponse (29)
/* dbm:QuerierByAliasResponse */
struct dbm__QuerierByAliasResponse
{
public:
	char **outResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_dbm__QuerierByAlias
#define SOAP_TYPE_dbm__QuerierByAlias (30)
/* dbm:QuerierByAlias */
struct dbm__QuerierByAlias
{
public:
	int inServiceId;	/* required element of type xsd:int */
	char *inAlias;	/* optional element of type xsd:string */
	char *inParams;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (7)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (8)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (10)
typedef LONG64 xsd__long;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
